#import useful libraries
import glob
import cv2
import pickle
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
import numpy as np
import ipywidgets as widgets
%matplotlib inline

#upload test photo
test1 = plt.imread('test_samples/straight_lines1.jpg')
test11 = cv2.imread('test_samples/straight_lines1.jpg')
#cv2.imshow('test11',test11)
#cv2.waitKey(0)
#cv2.destroyAllWindows

#define some useful functions
def show_image(image, title = 'image', cmap_type = 'gray'):
    plt.imshow(image, cmap = cmap_type)
    plt.title(title)
    #plt.axis("off")
    
def gaussian_blur(img, kernel_size):
    return cv2.GaussianBlur(img,(kernel_size,kernel_size),0)
    
    
    
def get_M_Minv(sourcePints, destinationPoints):
  
    M = cv2.getPerspectiveTransform(sourcePints, destinationPoints)
    Minv = cv2.getPerspectiveTransform(destinationPoints, sourcePints)
    
    return M, Minv


def warp_image(img, M):

    # get the size of the image
    width = img.shape[1]
    height = img.shape[0]
    # Apply the transformation
    warped = cv2.warpPerspective(img, M, (width,height))
    
    return warped
    
    
    
def apply_perspective_transform(img, M, src, dst, lines_color = (0,255,0), thickness = 5):
    """
    #Apply the perspective transformation to a color image (test)
    
    Parameters:
        img (np.array): Image
        M (np.array(float)): Matrix that define the transformations to apply (could by M or Minv)
        src (np.array(float)): Source points (to be draw)
        dst (np.array(float)): Destination points (to be draw)
        lines_color (list): Line color
        thickness (int): Thickness of the rectangule and polygon
        
    Returns:
        warped(numpy.ndarray): Image transformed
    """         
    warped = warp_image(img, M)
    #cv2.rectangle(warped, (dst[0][0], dst[0][1]), (dst[2][0], dst[2][1]), lines_color, thickness)
    
    roi = (src.reshape((-1, 1, 2))).astype(np.int32)
    img_roi = img.copy()
    cv2.polylines(img_roi,[roi], True, lines_color, thickness)
    
    fig, axs = plt.subplots(1, 2, figsize = (16, 16))
    axs = axs.ravel()
    axs[0].imshow(cv2.cvtColor(img_roi, cv2.COLOR_BGR2RGB))
    axs[0].set_title('Original ', fontsize = 12)
    axs[1].imshow(cv2.cvtColor(warped, cv2.COLOR_BGR2RGB))   
    axs[1].set_title('Warped (Bird eye view)', fontsize = 12)
